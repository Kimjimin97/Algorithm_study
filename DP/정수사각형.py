"""
앞으로 두 상황은 동등한 상황이라고 생각할 수 있다
왜냐하면 해당 문제에서는 '마지막으로 방문한 위치'와 '이동한 경로 상의 숫자 합'
이 일치한 경우, 그 이후의 입장에서 보았을 때 동일한 상황으로 간주

다음 두가지가 일치한 경우 동일한 상황으로 간주
1) 마지막으로 방문한 위치
2) 이동 경로 상의 숫자의 합

-> 마지막으로 방문한 위치가 같다면, 이동한 경로 상의 숫자 합이 클 수록 좋다.

(i,j)에 도달하는 경우 다음 2가지 경우를 생각해볼 수 있다.
1)바로 위에서 내려오는 경우,
2) 좌측 모서리에서 내려오는 경우

이 중 더 좋은 경우를 선택해서 좋은 답을 고른다.

초기에 확실하게 채워줄 수 있는 부분을 초기 조건이라고 한다.

점화식을 이용해 채우는 경우에는 항상 작은 문제가 먼저 풀려있다는 가정 하에서 큰 문제가 풀려야 한다.

"""

"""
정수 사각형 최대 값
N*N 행렬이 주어졌을 때,
(1,1)에서 시작하여 오른쪽 혹은 밑으로만 이동하여 
(N,N)으로 간다고 했을 때, 거쳐간 위치에 적혀 있는 숫자의 합을 최대로 작성

"""
n = int(input())

graph = [
    list(map(int, input().split()))
    for _ in range(n)
]

dp = [
    [0 for _ in range(n)]
    for _ in range(n)
]

dp[0][0] = graph[0][0]

for i in range(1,n):
    dp[0][i] = dp[0][i-1] + graph[0][i]
    dp[i][0] = dp[i-1][0] + graph[i][0]


for i in range(n):
    for j in range(n):
        if dp[i][j]:
            continue
        dp[i][j] = max(dp[i-1][j] , dp[i][j-1]) + graph[i][j]

print(dp[n-1][n-1])

